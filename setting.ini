[binSceneMaker]
# 落下物体の点群データ．pcdかplyを指定
load_model_path = ./sample/model.ply

# 落下物体の座標修正後の点群データ．このファイルを元に位置姿勢を出力する
save_centering_model_path = ./sample/model_centering.ply

# ばら積みシーンの点群データ．pcdかplyを指定
save_pointcloud_path = ./sample/bin_scene.ply

# ばら積みシーンの位置姿勢データ．4x4行列を1列にして出力
save_transforms_path = ./sample/transforms.txt

# 落下物体の点群データ．pcdかplyを指定
save_screenshots_dir = ./sample/movie/

# 落下物体数
model_num = 12

# キャプチャ時に見え方を調整するための待ち時間 [sec]
precapture_wait = 0

# 物体を落とす間隔．[frame]
falling_interval = 100

# 物体を落とし終えた後の静止待ち時間 [frame]
postsimulation_wait = 1000

# 落下物体生成位置のランダムシード値．-1で無作為に設定
random_seed = 0

# 受け皿の半径．物体の代表長さを1として正規化した長さ
cup_r = 1.2

# 受け皿の高さ 物体の代表長さを1として正規化した長さ
cup_h = 3.0

# 受け皿の反発係数
cup_restitution = 0.05

# 受け皿の摩擦係数
cup_friction = 0.3

# 落下物体の反発係数
model_restitution = 0.05

# 落下物体の摩擦係数
model_friction = 0.3

# シミュレーション空間でのおおよその大きさ
normalize_length = 10.0

# ダウンサンプリングの目標点数
downsample_target_points_num = 2000

# ダウンサンプリングの初期リーフサイズ
downsample_initial_leaf_size = 0.001

# ダウンサンプリングのリーフサイズの更新幅
downsample_factor = 1.2

# 実行中に表示するか
visualization = true

# 落下の様子を画像に保存するか
capture_screenshots = false



[visibleSceneMaker]
# 読み込む点群データ．pcdかplyを指定
load_path = ./sample/bin_scene.ply

# 片面点群シーンの点群データ．pcdかplyを指定
save_path = ./sample/bin_scene_visible.ply

# カメラ1画素あたりに含む領域の大きさ．小さくすると密に，大きくすると疎になる．小さすぎるとうまく片面にならない．
lambda = 0.005

# カメラ1の位置
camera_1_x = 10.0
camera_1_y = 200.0
camera_1_z = 0.0

# カメラ2の位置
camera_2_x = -10.0
camera_2_y = 200.0
camera_2_z = 0.0

# 実行後に表示するか
visualization = true
